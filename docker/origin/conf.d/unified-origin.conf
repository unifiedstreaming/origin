# builtin modules
LoadModule ext_filter_module modules/mod_ext_filter.so
LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_http_module modules/mod_proxy_http.so
LoadModule ssl_module modules/mod_ssl.so
# Unified Streaming modules
LoadModule smooth_streaming_module modules/mod_smooth_streaming.so
LoadModule unified_s3_auth_module modules/mod_unified_s3_auth.so

AddHandler smooth-streaming.extensions .ism .isml

ServerName unified-origin

UspLicenseKey /etc/usp-license.key

LogFormat '${LOG_FORMAT}' log_format


<VirtualHost 0.0.0.0:80>
# don't log kubernetes probes
  SetEnvIf User-Agent "kube-probe" dontlog
  CustomLog /dev/stdout log_format env=!dontlog
  ErrorLog /dev/stderr

  LogLevel ${LOG_LEVEL}
  SSLProxyEngine on

  DocumentRoot /var/www/unified-origin

  Header set Access-Control-Allow-Headers "origin, range"
  Header set Access-Control-Allow-Methods "GET, HEAD, OPTIONS"
  Header set Access-Control-Allow-Origin "*"
  Header set Access-Control-Expose-Headers "Server,range"

  # Enable Origin and use subrequests instead of libcurl
  <Location />
    UspHandleIsm on
    UspEnableSubreq on
  </Location>

  # Manifest Edit configuration
  Define ManifestEditCmdMpd "/usr/bin/manifest_edit --python_pipeline_path=/usr/share/manifest-edit/mpd -v 2 -o stdout: stdin:"
  Define ManifestEditCmdM3u8 "/usr/bin/manifest_edit --python_pipeline_path=/usr/share/manifest-edit/m3u8 -v 2 -o stdout: stdin:"
  ExtFilterDefine pipelineMpd mode=output cmd="${ManifestEditCmdMpd}"
  ExtFilterDefine pipelineM3u8 mode=output cmd="${ManifestEditCmdM3u8}"

  # By default, local isms URLs are *not* rewritten (UspSkipRewrite OFF).
  # This means you have to use this LocationMatch options
  <LocationMatch ".*\.mpd$">
    <If "%{QUERY_STRING} =~ /python_pipeline_config=/">
      ExtFilterOptions LogStderr Onfail=abort
      SetOutputFilter pipelineMpd
    </If>
  </LocationMatch>

  <LocationMatch ".*\.m3u8$">
    <If "%{QUERY_STRING} =~ /python_pipeline_config=/">
      ExtFilterOptions LogStderr Onfail=abort
      SetOutputFilter pipelineM3u8
    </If>
  </LocationMatch>

  # However, for URLs handled by IsmProxyPass, rewriting is indeed in place,
  # meaning this is the correct LocationMatch
  <LocationMatch ".*\.ism[l]?$">
    <If "%{QUERY_STRING} =~ /python_pipeline_config=/">
      ExtFilterOptions LogStdErr Onfail=abort
      <If "%{QUERY_STRING} =~ /file=\.mpd/">
        SetOutputFilter pipelineMpd
      </If>
      <ElseIf "%{QUERY_STRING} =~ /file=\.m3u8/">
        SetOutputFilter pipelineM3u8
      </ElseIf>
    </If>
  </LocationMatch>

  # remote storage configuration
  <IfDefine REMOTE_STORAGE_URL>
    <Location "/${REMOTE_PATH}/">
      IsmProxyPass "${REMOTE_STORAGE_URL}"
    </Location>

    <Proxy "${REMOTE_STORAGE_URL}">
      ProxySet connectiontimeout=5 enablereuse=on keepalive=on retry=0 timeout=30 ttl=300
      RequestHeader unset Accept-Encoding
      <IfDefine S3_ACCESS_KEY>
        S3AccessKey ${S3_ACCESS_KEY}
      </IfDefine>
      <IfDefine S3_SECRET_KEY>
        S3SecretKey ${S3_SECRET_KEY}
      </IfDefine>
      <IfDefine S3_REGION>
        S3Region ${S3_REGION}
      </IfDefine>
    </Proxy>
  </IfDefine>

</VirtualHost>

<Directory /var/www/unified-origin>
  Require all granted
</Directory>

# Optional REST API for publishing point management
<IfDefine REST_API_PORT>
  Listen ${REST_API_PORT}
  <VirtualHost 0.0.0.0:${REST_API_PORT}>
    CustomLog /dev/stdout log_format
    ErrorLog /dev/stderr
    LogLevel ${LOG_LEVEL}

    DocumentRoot /var/www/unified-origin

    # Enable REST API
    <Location />
      UspHandleApi on
    </Location>
  </VirtualHost>
</IfDefine>